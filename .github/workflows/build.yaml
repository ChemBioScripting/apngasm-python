name: Build and upload to PyPI

on:
  push:
    # tags:
    #     - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    # release:
    #   types:
    #     - [published]

jobs:
  build_wheels:
    name: Build wheels for Boost ${{ matrix.boost_version }} b2 ${ matrix.b2_version }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        boost_version: ['1.74.0', '1.75.0', '1.76.0', '1.77.0', '1.78.0', '1.79.0', '1.80.0', '1.81.0', '1.82.0', '1.83.0']
        b2_version: ['4.5.0', '4.6.1', '4.7.2', '4.8.2', '4.9.6', '4.10.1']
                    
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS: ppc64le
          CIBW_ENVIRONMENT: |
            APNGASM_COMPILE_TARGET=ppc64le
            BOOST_VERSION=${{ matrix.boost_version }}
            B2_VERSION=${{ matrix.b2_version }}
          CIBW_BUILD: "cp38-manylinux_ppc64le"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  # upload_pypi_test:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         # unpacks default artifact into dist/
  #         # if `name: artifact` is omitted, the action will create extra parent dir
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@v1.5.0
  #       with:
  #         user: __token__
  #         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #         repository_url: https://test.pypi.org/legacy/

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         # unpacks default artifact into dist/
  #         # if `name: artifact` is omitted, the action will create extra parent dir
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@v1.5.0
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}